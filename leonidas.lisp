(ql:quickload :alexandria)
(defpackage :leonidas (:use :cl :alexandria))

(in-package :leonidas)

(defun ascii-logo ()
  (format t
"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&%%%%%#######%%%&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&%(//*/((**(##%%%%%%%*/%%%#####(***//(%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#(*,/#%%##(((%#*(%%%%%*,%%*#%%%#(**(%*/%%%%%(///(#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%/,/%%##(,(###%##*##%###%##/,%#%%%%%%#/(#(,(%%%%(*/%%/,//*/%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@#/*(#%#(((*/#(/((#%%#,,/**///(((((((((((//**/(#%%%###*(%(*#%(#%##*/#@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@&(/(%#**%#(##%(*/((***/(####(((((((((((###########%%#//*,*##%(/#%%#*(%%#,*(&@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@&#*#%%/,/##/####/,*(%#(((((((((((((((((((((((((##############%#**#%#%*,%%/*%%%(*(&@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@%**###(###(*/(/*/(#(((((((((((((((((((((((((((((((((#################(**#%#/(%#((%%(/#@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@#/%%#*/(((##(**(#((((((((((((((((((((((((((((((((((((((((################%(*/#%#(%#*/%%(*(@@@@@@@@@@@@@@@\
@@@@@@@@@@@@&/(%%*,/%%%#(**##(((((((((((((((((((((((((((#*,,,,*#(((((((((###################%**(*(%%/,(%%*/&@@@@@@@@@@@@\
@@@@@@@@@@@((%#/###(/***/#((((((((((((((((((((((((((((((*,,,,,,*#((((((((((####################(*(%#/#%#(%%/(@@@@@@@@@@@\
@@@@@@@@@%/,*(##(/%#**(#(((((((((((((((((((((((((((((((*,,,,,,,,*#(((((((((((###################%#*(%##%%*#%#/%@@@@@@@@@\
@@@@@@@&((%##%//%#**(#((((((((((((((((((/////////(((((*,,,,,,,,,,*#(((((((((((####################%#*/#*,/%%%/,(&@@@@@@@\
@@@@@@%(##/(**/(/,/#(((((((((((((((////////////////((*,,,,,,,,,,,,*((((((((((((#####################%(*#%%**##%(/%@@@@@@\
@@@@@#(%#######,*#(((((((((((((///////////////////((,,,,,,,,,,,,,,,*((((((((((((######################%*(%%*%#(%#/#@@@@@\
@@@@#,,/#%/##(,*#((((((((((((////////////////////((,,,,,*,,,,,,,,,,,*((((((((((((######################%/,%%%%%(%#/#@@@@\
@@@%(%%%###%/,(#((((((((((((////////////////////((,,,,,(((*,,,,,,,,,,*(((((((((((#######################%#,*,/(#%%(*#@@@\
@@%/%(*****,,(#(((((((((((((///////////////////((,,,,,/(/(#,,,,,,,,,,,*(((((((((((#######################%#,#%#*(#%(/%@@\
@@(%#(%##%/,/#(((((((((((((///////////////////((,,,,,/(///(#,,,,,,,,,,,,#(((((((((########################%(*%#(%##%(/&@\
@%*#%%#(##**#((((((((((((((//////////////////((,,,,,/(/////(#,,,,,,,,,,,,#((((((((#########################%*/%%%%/#%/#@\
@/((//*(%/,(#(((((((((((((((////////////////(/,,,,,/(////////#,,,,,,,,,,,,#(((((((###########################,,*//(%%(/&\
%(%#,,,,,,*##(((((((((((((((///////////////(*,,,,,/(/////////(#,,,,,,,,,,,,##(((((##########################%*/%(*,,,,*%\
%%#(%#%%(,/#(((((((((((((((((/////////////#*,,,,,/(////////((((#*,,,,,,,,,,,(#(((############################(/%##%#%%/#\
#%#/%(/%/,(#(((((((((((((((((((//////////#*,,,,,/(////////(((((((*,,,,,,,,,,,/#((#############################*#%%%##%/#\
#,,,,*(%/,(#((((((((((((((((((((////////#*,,,,,/(//////(((((((((((*,,,,,,,,,,,/###############################,,,,,,(%/#\
##%%%###/,(#((((((((((((((((((((((((//(#/,,,,,/(////(((((((((((((((/,,,,,,,,,,,/##############################*#%####%*#\
%##/(%%%(,/##((((((((((((((((((((((((((/,,,,,/(((((((((((((((((((((#/,,,,,,,,,,,/############################(/%#/#%#(*%\
&/%#(####/,##(((((((((((((((((((((((((/,,,,,((((((((((((((((((((((((#/,,,,,,,,,,,/##########################%*/%#(%(#%*%\
@(#%%#//%/,(###((((((((((((((((((((((/,,,,,((((((((((((((((((((((((((#/,,,,,,,,,,,/##########################,*/((/#%((@\
@%*(#%%%#(*,####(((((((((((((((((((#*,,,,,(((((((((((((((((((((((((((##/,,,,,,,,,,,/#######################%*/%%%%%%%/%@\
@@%%#/,/#%(*,######(((((((((((((((#*,,,,,(((((((((((((((((((((((((((((#%*,,,,,,,,,,,/#####################%**%#*,,,,,(@@\
@@@#%#(%##%(**%######((((((((((((#*,,,,,(((((((((((((((((((((((((((#####%*,,,,,,,,,,,*###################%/*%#(%##%(/&@@\
@@@&(%%%%/(%(,,%########(((((((##,,,,,,(#(((((((((((((((((((((((#########%*,,,,,,,,,,,*#################%*,*(#%#(%#(%@@@\
@@@@&/,,*(%%%*,,##############(%,,,,,,/#(((((((((((((((((((###############%*,,,,,,,,,,,,###############%**%%%%(/%#/%@@@@\
@@@@@&##%(*/#%#*,/%###########%,,,,,,/##((((((((((#########################%/,,,,,,,,,,,,############%(*#%#*,*/(//&@@@@@\
@@@@@@@%#%/#%/#%#,*#######(*,,,,,,,,,,,,,,*/(#######################(/*,,,,,,,,,,,,,,,,,,,,,,*(######**%%/%%%%%/(&@@@@@@\
@@@@@@@@%#%%%%#*%#/,*#%#(///////////////////////%#################//////////////////////////////(%%/,***#%#*%%/#@@@@@@@@\
@@@@@@@@@&(/**(%%(***,*########################################################################%#//#%#%%#(%%((&@@@@@@@@@\
@@@@@@@@@@@&(%%(,#%%#%(**(###################################################################%#**#%(/#(*,(#/&@@@@@@@@@@@\
@@@@@@@@@@@@@&/%%#/%%#(%%/,*#%############################################################%%*,,,/%%%%(%%/*&@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@&##%%(/(%#/*(/,*(%######################################################%(**#%%#%(**(%%((&@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@%*/%%/,#%%%%%#*,*##################################################/,*#%%(/%#/(%%#/#&@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@&#(%%#/%%%**%#(,*,,*(%%##################################%%#***(%%%/*%%%((%%(*(&@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@&#(#%%**%%/*###%%#(/*,*/((#%%%%############%%%%#((//,*,*#%%#((*(%%(#%%(/#&@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@@&(*#%%#/##%%#*/%%*(%%%%(/***,,,,,*******,*(%%%%##%%*(%%##%%/,((*/&@@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#//%%%%/,(%*,&%%%#(*(#%/(%%%%%##(%#//#%%%%%,/%%(%%%%#/*#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&#(/*(#%%%#(#%#,/%(*/#%%%%#,,/%(*/((#%%(,*(//(#&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&#//***,/##%%%%%%%#,,*(##(/**/#%&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@~%"))

(defun greetings (user)
  (format t "Greetings ~s " user)
  (format t "and welcome to Sparta~%"))

(defun workout ()
  (let ((n (random 20)))
    (format t "Today's workout is ~d~%" n)
  (let ((n (random 20)))
    (format t "You will do ~d pushups~%" n)
  (let ((n (random 20)))
    (format t "You will do ~d situps~%" n)
  (let ((n (random 20)))
    (format t "You will do ~d squats~%" n)))

(defun code ()
  ;; pick a random number between 1 and 3 and depending on the number call a function
  (let ((n (random 3)))
    (cond ((= n 0) ("Review a PR"))
          ((= n 1) ("PR on a github issue")
          ((= n 2)
            (let ((x (random 1000))))
              (format t "You will write ~d lines of code~%" x)))))

(defun ranger-exersize ()
  (format t "Go range across the land with zeus"))

(defun random-choice ()
  (format t "random choice!!?!~%")
  (let ((selection (random-elt menu)))
    (format t "You chose ~s~%" (car selection))
    (funcall (cadr selection))))


(defparameter menu `(('workout ,#'workout)
                     ('code ,#'code)
                     ('ranger-exersize ,#'ranger-exersize)
                     ('random-choice ,#'random-choice)))

(defun menu ()
  (loop for i upto (- (length menu) 1)
        do
           (format t "~d) ~s~%" i (car (elt menu i))))
  (format t "enter a choice: ")
  (let ((choice (parse-integer (read-line))))
    (funcall (cadr (elt menu choice)))))

(defun leonidas ()
  (ascii-logo)
  (greetings :kuberlog)
  (menu))
